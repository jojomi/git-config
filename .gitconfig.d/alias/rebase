[alias]
  # rebase current branch (assume being forked from master)
  rbi = !sh -c 'git rebase --interactive ${1:-$(git fork-commit)}' -

  # rebase n revisions from HEAD (default 3)
  rbih = !sh -c 'git rbi HEAD~${1:-3}' -

  # rebase automatically (find oldest commit to be fixupped or squashed)
  rba = !sh -c 'HASH=$(git log --format='%H' --grep '^fixup!' --grep '^squash!' | tail -n 1) && git rbi $(git fork-commit)' -

  # fixup
  fix = !sh -c 'git commit --fixup=${1:-HEAD}' -
  fix-rebase = !sh -c 'HASH=$(git rev-parse ${1:-HEAD}) && PARENT_HASH=$(git rev-parse $HASH~1) && echo "fixing commit $HASH" && echo "rebasing onto $PARENT_HASH" && git fix $HASH && git rebase --interactive $PARENT_HASH' -
  fix-instant = !sh -c 'export GIT_EDITOR=true && HASH=$(git rev-parse ${1:-HEAD}) && PARENT_HASH=$(git rev-parse $HASH~1) && echo "fixing commit $HASH" && echo "rebasing onto $PARENT_HASH" && git fix $HASH && git rebase --interactive $PARENT_HASH' -
  fr = !git fix-rebase
  fi = !git fix-instant
